@{
    ViewBag.Title = "Editar";
}
@if (Session["NOME"] != null)
{
    @model CadastroUsuarioModels.Processo
    Layout = "~/Views/Shared/_Layout.cshtml";

    @section navbar
        {
        @Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
        @Html.ActionLink("Novo Processo", "Index", "Processo", new { area = "" }, new { @class = "navbar-brand" })
        @Html.ActionLink("Historico", "Index", "Historico", new { area = "" }, new { @class = "navbar-brand" })
        @Html.ActionLink("Sair", "LogOut", "Login", new { area = "" }, new { @class = "navbar-brand" })
    }

    <h2>Editar</h2>

    using (Html.BeginForm("Editar", "EditarProcesso", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Processo</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Id_Processo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_Processo, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.Id_Processo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_Status, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.Id_Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Pais</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Cidade.Estado.Pais, new SelectList(ViewBag.GetPais, "ID_PAIS", "NOME"), "-- Selecione o pais --", new { @class = "form-control", @id = "GetPais" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Estado</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Cidade.Estado, new SelectList(ViewBag.GetEstado, "ID_ESTADO", "NOME"), "-- Selecione o estado --", new { @class = "form-control", @id = "GetEstado" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Cidade</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Cidade.Id_Cidade, new SelectList(ViewBag.GetCidade, "ID_CIDADE", "NOME"), "-- Selecione a cidade --", new { @class = "form-control", @id = "GetCidade" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Rg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Rg, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rg, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nascimento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nascimento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Rua, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar" class="btn btn-success" />
                    @Html.ActionLink("Voltar", "Index", "Home", new { }, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    }
}
else
{
    <button class="btn btn-default">
        @Html.ActionLink("Fazer Login", "Index", "Login")
    </button>
}

@section scripts
{

    <script>
        $(function () {
            $('#GetPais').change(
                function () {
                    $.getJSON('@Url.Action("GetListaEstado", "Processo")',   {
                        id_Pais: $(this).val()
                    }, function (data, isSuccess) {
                            $('#GetEstado').html("");
                            $('#GetCidade').html("");
                        if (isSuccess == "success") {
                            $.each(data, function (i, v) {
                                $('#GetEstado').append('<option value="' + v.Value + '">' + v.Text + '</option>');
                            })
                        }
                        });
                }
            );

            $('#GetEstado').change(
                function () {
                    $.getJSON('@Url.Action("GetListaCidade", "Processo")',   {
                        id_Estado: $(this).val()
                    }, function (data, isSuccess) {
                        $('#GetCidade').html("");
                        if (isSuccess == "success") {
                            $.each(data, function (i, v) {
                                $('#GetCidade').append('<option value="' + v.Value + '">' + v.Text + '</option>');
                            })
                        }
                        });
                }
            );

        })
    </script>

}


